(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{357:function(t,e,r){t.exports=r.p+"assets/img/five-core-function.58890608.jpg"},358:function(t,e,r){t.exports=r.p+"assets/img/本地代码编写.dfdf9fe6.jpg"},359:function(t,e,r){t.exports=r.p+"assets/img/本地Java代码调试-链表题目.10b1799b.jpg"},360:function(t,e,r){t.exports=r.p+"assets/img/java-debug-人性化打印.624a3cd1.png"},361:function(t,e,r){t.exports=r.p+"assets/img/python-debug.43e8c7d7.jpg"},362:function(t,e,r){t.exports=r.p+"assets/img/cpp-debug.9be97f37.jpg"},363:function(t,e,r){t.exports=r.p+"assets/img/查询.302f4d50.gif"},364:function(t,e,r){t.exports=r.p+"assets/img/题库界面.c0874492.jpg"},365:function(t,e,r){t.exports=r.p+"assets/img/LC-竞赛.50819ce1.jpg"},366:function(t,e,r){t.exports=r.p+"assets/img/deep-coding-linsheng.d113a670.gif"},367:function(t,e,r){t.exports=r.p+"assets/img/review规划.b66a981c.gif"},371:function(t,e,r){"use strict";r.r(e);var o=r(14),s=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("code",[t._v("Leetcode-runner")]),t._v("是一款开源的Jetbrain产品插件。旨在实现一个核心功能完备，且简洁容易上手的Leetcode刷题插件。插件支持日常刷题所需的一切功能，如"),e("strong",[t._v("代码编写")]),t._v("、"),e("strong",[t._v("代码运行/提交")]),t._v("、"),e("strong",[t._v("测试案例更换")]),t._v("、"),e("strong",[t._v("运行结果显示")]),t._v("、"),e("strong",[t._v("题解展示")]),t._v("、"),e("strong",[t._v("提交记录展示")]),t._v("、"),e("strong",[t._v("代码替换")]),t._v("、"),e("strong",[t._v("测试案例替换")]),t._v("等功能，实现脱离Web端刷leetcode")]),t._v(" "),e("p",[t._v("此外，插件项目还提供另外四个极为强大的功能。分别是"),e("strong",[t._v("大批量题目快速检索")]),t._v("、"),e("strong",[t._v("核心代码断点调试")]),t._v("、"),e("strong",[t._v("深度刷题")]),t._v("、*"),e("strong",[t._v("自动规划刷题(预计在v3.7.0版本上线)")])]),t._v(" "),e("h2",{attrs:{id:"📖-功能模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#📖-功能模块"}},[t._v("#")]),t._v(" 📖 功能模块")]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(357)}}),t._v(" "),e("h3",{attrs:{id:"本地刷题支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地刷题支持"}},[t._v("#")]),t._v(" 本地刷题支持")]),t._v(" "),e("p",[t._v("作为一款Jetbrains IDE插件，它提供了本地刷题的支持，即在IDE中直接编写代码，并提交到Leetcode平台进行测试和运行。")]),t._v(" "),e("p",[t._v("插件支持代码编写，测试案例设置，运行结果可视化，题目查看，题解查看，提交记录查看等诸多功能。")]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(358)}}),t._v(" "),e("h3",{attrs:{id:"核心断点调试功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心断点调试功能"}},[t._v("#")]),t._v(" 核心断点调试功能")]),t._v(" "),e("p",[t._v("Leetcode题目都是核心代码模式，即只给出Solution，而没有main函数。这使得调试变得更加困难，因为无法直接运行代码。如果用户想要调试，需要手动编写"),e("strong",[t._v("大量多余代码")]),t._v("，手动将测试案例转换为对应代码。如果遇到链表或者二叉树等复杂数据结构，"),e("strong",[t._v("极容易出错")]),t._v("。")]),t._v(" "),e("p",[t._v("为了解决这一问题，Leetcode-Runner"),e("strong",[t._v("内置调试系统")]),t._v("，"),e("u",[t._v("支持多种语言，无需额外编码，一键调试Solution代码")]),t._v("。")]),t._v(" "),e("p",[t._v("此外，针对不同的数据结构，Leetcode-Runner还对数据进行优化。譬如Java的Map，Set，LinkedList等数据结构，给出更为人性化的显示内容。")]),t._v(" "),e("p",[e("strong",[t._v("java")]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(359)}})]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(360)}}),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("p",[e("strong",[t._v("python")])]),t._v(" "),e("blockquote",[e("p",[t._v("idea中调试python，无需切换IDE")])]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(361)}}),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("p",[e("strong",[t._v("cpp")])]),t._v(" "),e("blockquote",[e("p",[t._v("idea中调试cpp，无需切换IDE")])]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(362)}}),t._v(" "),e("h2",{attrs:{id:"leetcode题目快速检索"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leetcode题目快速检索"}},[t._v("#")]),t._v(" leetcode题目快速检索")]),t._v(" "),e("p",[t._v("leetcode-runner为了提高题目检索效率, 废弃复用leetcode平台接口的这一技术方案, 转而开发本地的搜索服务, 以此提高查询效率\n"),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(363)}})]),t._v(" "),e("h2",{attrs:{id:"内置精选题库-算法文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置精选题库-算法文章"}},[t._v("#")]),t._v(" 内置精选题库/算法文章")]),t._v(" "),e("p",[t._v("leetcode平台一共拥有接近4000道题目, 初学者并不清楚有哪些题目适合自己，盲目的刷题不仅不利于专项能力的提高，更会消耗自己对算法热情，无法将刷题作为一个长期坚持的习惯，从长远来看，会让自己对算法产生畏惧。为了解决这一问题，leetcode-runner内置多个精选题库，并提供个性化UI界面，"),e("strong",[t._v("极大的提高用户的刷题的质量与效率")]),t._v("。")]),t._v(" "),e("p",[t._v("leetcode-runner内置的精选题库有：")]),t._v(" "),e("ul",[e("li",[t._v("Leetcode热门100题")]),t._v(" "),e("li",[t._v("经典面试150题")]),t._v(" "),e("li",[t._v("竞赛题目")])]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(364)}}),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("p",[t._v("对于竞赛题目, Leetcode-Runner展示每一道"),e("code",[t._v("题目对应的难度分")]),t._v("和"),e("code",[t._v("解决题目所需要的算法")]),t._v("。需要说明的是，所谓的"),e("code",[t._v("难度分")]),t._v("是指想要解决某一道题目，用户需要具备的"),e("code",[t._v("最低leetcode竞赛分数")]),t._v("。比如说某道题目的难度分是3000分，如果用户当前的leetcode竞赛分是1900，远远低于3000，那么这道题目明显不适合当前用户。用户应该通过筛选功能选择"),e("code",[t._v("1900~2100")]),t._v("分的题目。另外，如果用户想要专门练习"),e("code",[t._v("动态规划")]),t._v("算法，可以在"),e("strong",[t._v("算法筛选")]),t._v("中选择"),e("code",[t._v("动态规划")]),t._v("。")]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(365)}}),t._v(" "),e("br"),t._v(" "),e("br"),t._v("\n值得一提的是，Leecode-Runner专门集成了灵神(算法大牛)的算法文章，用户可自行选择是在插件中浏览还是跳转到leetcode官网观看。\n"),e("br"),t._v(" "),e("p",[t._v("此外插件对于灵神文章中出现的链接做出额外优化，如果链接指向的是题目，则会在Leetcode-Runner中打开。")]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(366)}}),t._v(" "),e("br"),t._v(" "),e("br"),t._v(" "),e("h2",{attrs:{id:"自动刷题规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动刷题规划"}},[t._v("#")]),t._v(" 自动刷题规划")]),t._v(" "),e("p",[t._v("在刷题时，遇到不会的题目我们可能需要很长时间才能解决，即使最终解决题目，这也并不意味着你真的掌握了它。人的记忆是会衰减的，可能过了一段时间后你又发现你完全没有思路。想要真正理解并掌握某一道题目，需要不断的重复巩固。然而，市面上并没有别的插件会将题目集成，规划下一次复习时间，这一切都需要用户手动记录，于用户而言很不友好。")]),t._v(" "),e("p",[t._v("为了解决这一问题，Leetcode-Runner引入review功能，允许用户将刷过的题目添加到复习题单，系统会"),e("strong",[t._v("自动规划")]),t._v("下一次做题时间，并且复习时间的规划符合"),e("code",[t._v("记忆遗忘曲线")]),t._v("。通过不断重复，帮助用户真正掌握某一道题目。")]),t._v(" "),e("p",[t._v("目前该功能正处于"),e("strong",[t._v("开发阶段")]),t._v("，预计将在"),e("code",[t._v("v3.7.0版本")]),t._v("上线。")]),t._v(" "),e("blockquote",[e("p",[t._v("功能示意览图")])]),t._v(" "),e("img",{staticStyle:{display:"block",margin:"0 auto",zoom:"50%"},attrs:{src:r(367)}}),t._v(" "),e("h2",{attrs:{id:"🌐-仓库地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🌐-仓库地址"}},[t._v("#")]),t._v(" 🌐 仓库地址")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/xuhuafeifei/leetcode-runner",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode-runner Github"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"🏗️-参与贡献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#🏗️-参与贡献"}},[t._v("#")]),t._v(" 🏗️ 参与贡献")]),t._v(" "),e("p",[t._v("欢迎各路好汉一起来参与完善 Leetcode-runner，我们期待你的 PR！")]),t._v(" "),e("ul",[e("li",[t._v("贡献代码：代码地址 "),e("a",{attrs:{href:"https://github.com/xuhuafeifei/leetcode-runner",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode-runner"),e("OutboundLink")],1),t._v("，欢迎提交 Issue 或者 Pull Requests")]),t._v(" "),e("li",[t._v("维护文档：文档地址 "),e("a",{attrs:{href:"https://github.com/itxaiohanglover/leetcode-runner-doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode-runner-doc"),e("OutboundLink")],1),t._v("，欢迎参与修订")])])])}),[],!1,null,null,null);e.default=s.exports}}]);